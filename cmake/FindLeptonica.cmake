# This module defines
# Leptonica_LIBRARIES
# Leptonica_FOUND
# Leptonica_INCLUDE_DIRS, where to find the headers
# LIBLEPT_PATCH_VERSION, LIBLEPT_MINOR_VERSION, LIBLEPT_PATCH_VERSION

find_path(Leptonica_INCLUDE_DIR_ALLHEADERS allheaders.h)
find_path(Leptonica_INCLUDE_DIR_ENDIANNESS endianness.h)

if(Leptonica_INCLUDE_DIR_ALLHEADERS AND Leptonica_INCLUDE_DIR_ENDIANNESS)
	file(READ ${Leptonica_INCLUDE_DIR_ALLHEADERS}/allheaders.h ALLHEADERS_H)
	string(REGEX MATCH "#define[ ]+(LEPTONICA_ALLHEADERS_H)" LEPTONICA_ALLHEADERS_H ${ALLHEADERS_H})
	string(REGEX MATCH "#define[ ]+LIBLEPT_MAJOR_VERSION[ ]+[0-9]+" LIBLEPT_MAJOR_VERSION ${ALLHEADERS_H})
	string(REGEX MATCH "#define[ ]+LIBLEPT_MINOR_VERSION[ ]+[0-9]+" LIBLEPT_MINOR_VERSION ${ALLHEADERS_H})
	string(REGEX MATCH "#define[ ]+LIBLEPT_PATCH_VERSION[ ]+[0-9]+" LIBLEPT_PATCH_VERSION ${ALLHEADERS_H})
	string(REGEX REPLACE "^[^0-9]+([0-9]+)$" "\\1" LIBLEPT_MAJOR_VERSION ${LIBLEPT_MAJOR_VERSION})
	string(REGEX REPLACE "^[^0-9]+([0-9]+)$" "\\1" LIBLEPT_MINOR_VERSION ${LIBLEPT_MINOR_VERSION})
	string(REGEX REPLACE "^[^0-9]+([0-9]+)$" "\\1" LIBLEPT_PATCH_VERSION ${LIBLEPT_PATCH_VERSION})
	if(LEPTONICA_ALLHEADERS_H
		AND LIBLEPT_MAJOR_VERSION
		AND LIBLEPT_MINOR_VERSION
		AND LIBLEPT_PATCH_VERSION
	)
		set(LIBLEPT_VERSION "${LIBLEPT_MAJOR_VERSION}.${LIBLEPT_MINOR_VERSION}.${LIBLEPT_PATCH_VERSION}")
		set(Leptonica_INCLUDE_DIRS
			${Leptonica_INCLUDE_DIR_ALLHEADERS}
			${Leptonica_INCLUDE_DIR_ENDIANNESS}
		)
		find_library(Leptonica_LIBRARIES
			NAMES leptonica
			"leptonica-${LIBLEPT_VERSION}"
		)
		if(Leptonica_LIBRARIES AND WIN32)
			option(LEPT_DLL "Define if you use Leptonica DLL." ON)
		endif()
	endif()
endif()

include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(Leptonica
	REQUIRED_VARS Leptonica_LIBRARIES Leptonica_INCLUDE_DIRS
	VERSION_VAR LIBLEPT_VERSION
)

if(LEPT_DLL)
	add_definitions(-DLIBLEPT_IMPORTS)
endif()
